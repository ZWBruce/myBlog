{"version":3,"sources":["context.ts","components/Card/index.tsx","components/Article/index.tsx","components/ArticleList/index.tsx","components/TagList/index.tsx","components/main/Main.tsx","components/Head/Head.tsx","components/category/index.tsx","components/tags/index.tsx","components/write/Write.tsx","App.tsx","serviceWorker.ts","common/global/store.ts","index.tsx"],"names":["context","createContext","connect","state","add","type","asyncAdd","dispatch","getState","setTimeout","props","data","useContext","x","dayjs","y","console","log","duration","diff","className","src","host","alt","onClick","count","articleCount","tagsCount","img","useMemo","image","info","title","useState","list","setList","format","useCallback","n","useEffect","sortedArticle","map","t","key","id","time","tag","tag_name","num","initalSate","reducer","action","imgRef","useRef","useReducer","axios","url","method","then","res","articleList","ref","images","current","files","fd","FormData","append","React","Children","children","child","text","ind","to","activeClassName","TextArea","content","val","change","e","target","value","onChange","placeholder","source","getArticleList","a","get","getTagsList","ctxt","path","component","Main","Catagory","Tags","exact","from","Write","Boolean","window","location","hostname","match","initalState","tagsList","createStore","sorted","sort","b","applyMiddleware","thunk","isLeapYear","globalData","ReactDOM","render","store","Provider","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.ccdd12ff.chunk.js","sourcesContent":["import { createContext } from 'react'\n\nexport const context = createContext<any>({})\n","import React, { useContext } from 'react'\nimport { context } from '@/context'\nimport { connect } from 'react-redux'\nimport './index.less'\nimport dayjs from 'dayjs'\n\nfunction Card(props: any) {\n  const data: any = useContext(context)\n  let x = dayjs()\n  let y = dayjs(1598195948672)\n\n  console.log('dayjs', dayjs.duration(x.diff(y)))\n\n  return <div className=\"card-content card-bg\">\n    <img src={`${data.host}/files/download?name=1.jpg`} alt=\"\" />\n    <span className=\"name\" onClick={() => { props.add() }}>凉城{props.count}</span>\n    <span onClick={() => { props.asyncAdd() }}>不负初心，方得始终</span>\n    <nav className=\"level\">\n      <div className=\"level-item\">\n        <p className=\"heading\">\n          文章\n      </p>\n        <p className=\"title\">\n          {props.articleCount}\n        </p>\n      </div>\n      <div className=\"level-item\">\n        <p className=\"heading\">\n          分类\n      </p>\n        <p className=\"title\">\n          {props.tagsCount}\n        </p>\n      </div>\n\n    </nav>\n  </div>\n}\n\nexport default connect(state => ({ ...state }), {\n  add() {\n    return {\n      type: 'ADD'\n    }\n  },\n  asyncAdd() {\n    return function (dispatch: Function, getState: any) {\n      setTimeout(() => {\n        dispatch({ type: 'ADD' })\n      }, 2000)\n    }\n  }\n})(Card)","import React, { useContext, useMemo } from 'react'\nimport { context } from '@/context'\nimport './index.less'\n\nexport default function (props: any) {\n  const data: any = useContext(context)\n\n  const img = useMemo(() => {\n    let image = props.info.img\n    return image ? image : `${data.host}/files/download?name=1.jpg`\n  }, [data.host, props.info.img])\n\n  return <div className=\"article-wrap card-bg\">\n    <img src={img} alt=\"\" />\n    <div className=\"content-wrap\">\n      <div className=\"notice mb-7\">\n        <span>1天前</span>\n        <span>前端</span>\n      </div>\n      <h1 className=\"title link\">\n        {props.info.title}\n      </h1>\n      <div className=\"abstract\">\n\n      </div>\n    </div>\n  </div>\n}","import React, { useContext, useState, useEffect, useCallback } from 'react'\nimport { context } from '@/context'\nimport { connect } from 'react-redux'\nimport dayjs from 'dayjs'\nimport './index.less'\n\nfunction ArticleList(props: any) {\n  const data: any = useContext(context)\n\n  const [list, setList] = useState<any[]>([])\n\n  const format = useCallback((n: string | number) => {\n    n = +n\n    return dayjs(n).format('YYYY-MM-DD HH:mm:ss')\n  }, [])\n\n  useEffect(() => {\n    setList(props.sortedArticle)\n    console.log(props.sortedArticle)\n  }, [props.sortedArticle])\n\n  return <div className=\"list-wrap card-bg\">\n    <div className=\"notice mb-10\">\n      最新文章\n    </div>\n    <div>\n      {\n        list.map(t => <div className=\"item-wrap\" key={t.id}>\n          <img src={t.img || `${data.host}/files/download?name=1.jpg`} alt={t.title} />\n          <div className=\"item-right\">\n            <div className=\"date notice\">{format(t.time)}</div>\n            <div className=\"title link\">{t.title}</div>\n            <div className=\"tag notice\">{t.tag.tag_name}</div>\n          </div>\n        </div>)\n      }\n    </div>\n  </div>\n}\n\nexport default connect(state => ({ ...state }))(ArticleList)","import React, { useContext, useState } from 'react'\nimport { context } from '@/context'\nimport './index.less'\n\nexport default function () {\n  const data: any = useContext(context)\n\n  const [list, setList] = useState([{\n    tag: '前端1',\n    num: 2,\n    id: 0\n  },\n  {\n    tag: '前端2',\n    num: 3,\n    id: 1\n  },\n  {\n    tag: '前端3',\n    num: 4,\n    id: 2\n  },\n  {\n    tag: '前端4',\n    num: 5,\n    id: 3\n  }])\n\n  return <div className=\"tag-wrap card-bg\">\n    <div className=\"notice mb-10\">\n      分类\n    </div>\n    <ul>\n      {\n        list.map(t => <li className=\"item-wrap\" key={t.id}>\n          <span>{t.tag}</span>\n          <span>{t.num}</span>\n        </li>)\n      }\n    </ul>\n  </div>\n}","import React, { useCallback, useMemo, useReducer, useEffect, useRef, useContext } from 'react'\nimport { Button } from 'antd'\nimport axios from 'axios'\nimport { connect } from 'react-redux'\nimport { context } from '@/context'\nimport Card from '@c/Card'\nimport Article from '@c/Article'\nimport ArticleList from '@c/ArticleList'\nimport TagList from '@c/TagList'\nimport './Main.less'\n\ninterface Act {\n  type: string;\n  val?: any\n}\n\nconst initalSate = { count: 0 }\n\nfunction reducer(state: any, action: Act) {\n  const { count } = state\n  switch (action.type) {\n    case 'add':\n      return { count: count + 1 }\n    case 'desc':\n      return { count: count - 1 }\n    default:\n      return state\n  }\n}\n\nfunction Main(props: any) {\n  const data: any = useContext(context)\n\n  const imgRef = useRef(null)\n\n  const [state, dispatch1] = useReducer(reducer, initalSate)\n\n\n  useEffect(() => {\n\n    axios(\n      {\n        url: `${data.host}/articles/list`,\n        method: 'get'\n      }\n    ).then(res => {\n      console.log(res)\n    })\n  }, [data.host])\n\n  function upload() {\n    const imgDom = imgRef.current as unknown\n    const images: any = (imgDom as HTMLInputElement).files\n    const fd = new FormData()\n    fd.append('image', images[0])\n    fd.append('msg', 'abcd')\n    axios(\n      {\n        url: `${data.host}/upload`,\n        method: 'post',\n        data: fd\n      }\n    ).then(res => {\n      console.log(res)\n    })\n  }\n\n\n  // function upload() {\n\n  // }\n\n  return <div className=\"main-wrapp\">\n    <div className=\"flex-left\">\n      <Card />\n      <TagList />\n    </div>\n    <div className=\"flex-center\">\n      {\n        props.articleList.map((t: any) => {\n          return <Article info={t} key={t.id} />\n        })\n      }\n\n    </div>\n    <div className=\"flex-right\">\n      <ArticleList />\n    </div>\n    main comp {state.count}\n    <input type=\"file\" ref={imgRef} />\n\n    <Button type=\"primary\" onClick={upload}>add</Button>\n  </div>\n}\n\nexport default connect(state => ({ ...state }))(Main)","import React, { ReactChild, useState } from 'react'\nimport { NavLink } from 'react-router-dom'\nimport './Head.less'\n\nexport default function (props: { children: ReactChild }) {\n  let links = [{\n    text: '主页',\n    url: '/index'\n  },\n  {\n    text: '淘宝',\n    url: '/catagory'\n  },\n  {\n    text: '字节跳动',\n    url: '/tags'\n  }\n  ]\n\n  if (process.env.NODE_ENV === 'development') {\n    links.push({\n      text: '写文章',\n      url: '/write'\n    })\n  }\n\n  return <nav className=\"app-header\">\n    <div className=\"app app-inner-header\">\n      {\n        React.Children.map(props.children, child => {\n          return <div>{child}</div>\n        })\n      }\n      <div className=\"links\">\n        {\n          links.map(({ url, text }, ind) => {\n            return <NavLink to={url} key={ind} activeClassName=\"active\">{text}</NavLink>\n          })\n        }\n      </div>\n    </div>\n  </nav>\n}","import React from 'react'\n\nexport default function () {\n  return <div>\n    catagory\n  </div>\n}","import React from 'react'\n\nexport default function () {\n  return <div>\n    tags\n  </div>\n}","import React, { useReducer, useEffect, useRef, useContext } from 'react'\nimport { Button, Input } from 'antd'\nimport axios from 'axios'\nimport './Write.less'\nimport MarkDown from 'react-markdown'\nimport { context } from '../../context'\n\nconst { TextArea } = Input\n\ninterface Act {\n  type: string;\n  val?: any\n}\n\nconst initalSate = { title: '', content: '' }\n\nfunction reducer(state: any, action: Act) {\n  switch (action.type) {\n    case 'changeTitle':\n      return { ...state, title: action.val }\n    case 'changeContent':\n      return { ...state, content: action.val }\n    default:\n      return state\n  }\n}\n\nexport default function () {\n\n  const [state, dispatch] = useReducer(reducer, initalSate)\n  const data = useContext(context)\n  function change(e: any, type = 'changeTitle') {\n    console.log(e.target.value)\n    dispatch({\n      type,\n      val: e.target.value\n    })\n  }\n\n  function upload() {\n    if (!state.title || !state.title) {\n\n      return\n    }\n    const url = `${data.host}/articles/send`\n    const fd = new FormData()\n    fd.append('title', state.title)\n    fd.append('content', state.content)\n    axios({\n      url,\n      method: 'post',\n      data: fd\n    }).then(res => {\n      console.log(res)\n    })\n  }\n\n  return <div className=\"write-wrap\">\n    <div className=\"flex\">\n      <Input value={state.title} onChange={(e) => change(e)} placeholder='文章标题' />\n      <Button type=\"primary\" onClick={upload}>上传文章</Button>\n    </div>\n    <div className=\"flex content\">\n      <div className=\"inner-content\">\n        <TextArea value={state.content} onChange={(e) => change(e, 'changeContent')} placeholder='文章内容' />\n      </div>\n      <div className=\"inner-content\">\n        <MarkDown source={state.content} />\n      </div>\n    </div>\n\n  </div>\n}","import React, { useContext, useEffect } from 'react';\nimport Main from './components/main/Main'\nimport Head from './components/Head/Head'\nimport Catagory from './components/category/index'\nimport Tags from './components/tags/index'\nimport Write from './components/write/Write'\nimport { HashRouter, Route, Redirect } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport axios from 'axios'\nimport { context } from '@/context'\nimport './App.less';\n\nfunction App(props: any) {\n  const ctxt = useContext(context)\n\n  useEffect(() => {\n    props.getArticleList(ctxt.host)\n    props.getTagsList(ctxt.host)\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [])\n\n  return (\n    <HashRouter>\n\n      <Head>\n        zw\n      </Head>\n      <div className='app'>\n        <Route path='/index' component={Main} />\n        <Route path='/catagory' component={Catagory} />\n        <Route path='/tags' component={Tags} />\n        <Redirect exact from='/' to='/index' />\n        <Route path='/write' component={Write} />\n      </div>\n    </HashRouter>\n  );\n}\n\nexport default connect(\n  (state) => ({ ...state }),\n  {\n    getArticleList(host: string) {\n      return async function (dispatch: any) {\n        const { data } = await axios.get(`${host}/articles`)\n        dispatch({\n          type: 'GET_ARTICLE_LIST',\n          val: data\n        })\n      }\n    },\n    getTagsList(host: string) {\n      return async function (dispatch: any) {\n        const { data } = await axios.get(`${host}/tags`)\n        dispatch({\n          type: 'GET_TAGS_LIST',\n          val: data\n        })\n      }\n    }\n  }\n)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { createStore, applyMiddleware } from 'redux'\nimport thunk from 'redux-thunk'\n\ninterface Act {\n  type: string;\n  val?: any\n}\n\nconst initalState: any = {\n  count: 1,\n  articleCount: 0,\n  tagsCount: 0,\n  articleList: [],\n  tagsList: [],\n  sortedArticle: []\n}\n\nfunction reducer(state = initalState, action: Act) {\n  let { type, val } = action\n  switch (type) {\n    case 'ADD':\n      return {\n        ...state,\n        count: state.count + 1\n      };\n    case 'GET_ARTICLE_LIST':\n      let sorted = val.list.sort((b: any, a: any) => a.time - b.time)\n      return {\n        ...state,\n        articleCount: val.count,\n        articleList: val.list,\n        sortedArticle: sorted,\n      }\n    case 'GET_TAGS_LIST':\n      return {\n        ...state,\n        tagsCount: val.count,\n        tagsList: val.list\n      }\n    default:\n      return state\n  }\n}\n\nexport default createStore(reducer, applyMiddleware(thunk))","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { context } from './context'\nimport * as dayjs from 'dayjs'\nimport isLeapYear from 'dayjs/plugin/isLeapYear' // 导入插件\nimport 'dayjs/locale/zh-cn' // 导入本地化语言\nimport duration from 'dayjs/plugin/duration'\nimport { Provider } from 'react-redux'\nimport store from '@/common/global/store'\n\ndayjs.extend(duration)\n\ndayjs.extend(isLeapYear) // 使用插件\ndayjs.locale('zh-cn') // 使用本地化语言\n\nconst host = process.env.NODE_ENV === 'development' ? 'http://localhost:8090' : 'http://39.96.31.138'\nconst globalData = {\n  host,\n  dayjs\n}\n\nReactDOM.render(\n  <Provider store={store}>\n    <context.Provider value={globalData} >\n      <App />\n    </context.Provider>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}